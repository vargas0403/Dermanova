@page "/registro-cedula"

<h3>Registro de Cédula</h3>

<EditForm Model="CedulaInput" OnValidSubmit="HandleValidSubmit">
    <DataAnnotationsValidator />
    <ValidationSummary />

    <div class="mb-3">
        <label for="Cedula" class="form-label">Cédula</label>
        <InputText @bind-Value="CedulaInput.Cedula" id="Cedula" class="form-control" />
        <span class="text-danger">@CedulaError</span>
    </div>

    <button type="submit" class="btn btn-primary">Validar Cédula</button>
</EditForm>

@code {
    // Modelo de entrada para el formulario
    public class CedulaModel
    {
        public string Cedula { get; set; }
    }

    private CedulaModel CedulaInput = new CedulaModel();
    private string CedulaError;

    // Método para manejar la validación
    private void HandleValidSubmit()
    {
        if (ValidarCedula(CedulaInput.Cedula))
        {
            CedulaError = "La cédula es válida.";
        }
        else
        {
            CedulaError = "La cédula no es válida.";
        }
    }

    // Método de validación de cédula (puedes reutilizar el que discutimos antes)
    private bool ValidarCedula(string cedula)
    {
        // Expresión regular para el formato 075-050408-1007K
        string pattern = @"^\d{3}-\d{6}-\d{4}[A-Z]$";
        var regex = new System.Text.RegularExpressions.Regex(pattern);

        if (!regex.IsMatch(cedula))
        {
            return false;
        }

        // Separar las partes de la cédula
        string[] partes = cedula.Split('-');
        string region = partes[0];
        string fecha = partes[1];
        string serie = partes[2].Substring(0, 4);
        char letraVerificacion = partes[2][4];

        // Validar la región
        if (!int.TryParse(region, out int numeroRegion) || numeroRegion < 1 || numeroRegion > 999)
        {
            return false;
        }

        // Validar la fecha
        if (!EsFechaValida(fecha))
        {
            return false;
        }

        // Si todo es válido, devolver verdadero
        return true;
    }

    private bool EsFechaValida(string fecha)
    {
        // La fecha está en formato ddMMyy
        if (fecha.Length != 6)
        {
            return false;
        }

        int dia = int.Parse(fecha.Substring(0, 2));
        int mes = int.Parse(fecha.Substring(2, 2));
        int año = int.Parse(fecha.Substring(4, 2)) + 1900; // Ajuste de año

        try
        {
            DateTime fechaNacimiento = new DateTime(año, mes, dia);
            return true;
        }
        catch
        {
            return false;
        }
    }
}
